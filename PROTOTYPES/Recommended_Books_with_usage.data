#pragma once
#include <iostream>
#include <cstdio>
#include <vector>
#include <string>
#include <fstream>
#include <sstream>
#include <algorithm>
#include <unordered_map>
#include "Console_Integrated_Sounds.h"
#include "Console_Coloring_Header.h"

using namespace std;


// Book class representing a book with a title and a usage count
class Book
{
    public:
        // Title of the book
        string title;
        // Number of times the book has been used
        int usageCount;
        // Constructor for the Book class
        // Takes a reference to a string for the title and a reference to an int for the usage count
        // Assigns the title and usage count to the class variables
        Book (string &title, int &usageCount) {
            this->title=title;
            this->usageCount=usageCount;
        }
};

// Function to reset the data
void Data_reset();

// Function to find the most recommended books
void Most_RecommendedBooks() {
  // Try block to catch any bad_alloc errors
  try { 
    // Clear the screen
    Clear_screen();

    // Declare a string variable
    string cvariable;

    // Open the "Book_used.data" file in read mode
    ifstream reading_variable("data/Book_used.data");
    // String to store each line read from the file
    string reading_line;

    // Vector to store the list of books read from the file
    vector<string> List;

    // Loop until the end of the file is reached
    while (!reading_variable.eof()){

            // Read a line from the file
            getline(reading_variable,reading_line);
            // Add the line to the vector
            List.push_back(reading_line);
    }

    // Unordered map to store
    